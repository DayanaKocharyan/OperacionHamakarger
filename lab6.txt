Լաբորատոր աշխատանք 6
ԻԿՄ 2-րդ կուրս 202 խումբ
Քոչարյան Դայանա

1. Գրել սկրիպտ, որը տրված թվի համար կարտածի հաղորդագրություն այն մասին, արդյոք թիվը դրական է, բացասական, թե՝ 0։ Թիվը վավերացնել ռեգուլյար արտահայտության միջոցով։ Պայմանների ստուգման համար օգտագործել [[ ]] օպերատորը։

#! /bin/bash
read -p "Enter a number: " num

if [[ $num -gt 0 ]];
then
    echo "The number is positive."
elif [[ $num -lt 0 ]];
then
    echo "The number is negative."
else
    echo "0 is neither positive nor negative."
fi

Enter a number: -5
The number is negative.

Enter a number: 0
0 is neither positive nor negative.

Enter a number: 33
The number is positive.

2. Կատարել 1-ին կետը՝ պայմանների ստուգման համար օգտագործելով (( )) օպերատորը։

#! /bin/bash
read -p "Enter a number: " num

if ((num > 0));
then
    echo "The number is positive."
elif ((num < 0));
then
    echo "The number is negative."
else
    echo "0 is neither positive nor negative."
fi


Enter a number: 13
The number is positive.

Enter a number: -4
The number is negative.

Enter a number: 0
0 is neither positive nor negative.

3. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը 2-ի, 3-ի եւ 5-ի բազմապատիկ է։

#! /bin/bash
read -p "Enter a number: " num

if ((num % 2 == 0)) && ((num % 3 == 0)) && ((num % 5 == 0));
then
    echo "The number is a multiple of 2, 3, and 5."
else
    echo "The number is not a multiple of 2, 3, and 5."
fi

Enter a number: 23
The number is not a multiple of 2, 3, and 5.

Enter a number: 25
The number is not a multiple of 2, 3, and 5.

Enter a number: 30
The number is a multiple of 2, 3, and 5.

4. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը 2-ի, 3-ի կամ 5-ի բազմապատիկ է։

#! /bin/bash
read -p "Enter a number: " num

if ((num % 2 == 0)) || ((num % 3 == 0)) || ((num % 5 == 0));
then
    echo "The number is a multiple of 2, 3, or 5."
else
    echo "The number is not a multiple of 2, 3, or 5."
fi

Enter a number: 25
The number is a multiple of 2, 3, or 5.

5. Մեկ հրամանի միջոցով ստեղծել նոր ֆայլ եւ այդ ֆայլին ավելացնել կատարելու թույլտվություն։

touch new_file.txt && chmod +x new_file.txt

6. Մեկ հրամանի միջոցով ստուգել, թե արդյոք գոյություն ունի dir անունով դիրեկտորիա, եւ, եթե գոյություն չունի, ապա ստեղծել։

mkdir -p dir

7. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը գտնվում է սահմանված միջակայքում։ Ստուգվող թիվը եւ միջակայքի սահմանների թվերը ներմուծել read հրամանի միջոցով։ Իրականացնել տվյալների վավերացում։

#! /bin/bash
Check(){
    if [[ $1 =~ ^-?[[:digit:]]+$ ]]; then
        echo "$1 is an integer."
    else
        echo "$1 is not an integer."
    fi
}

read -p "Enter a number: " num
read -p "Enter the lower limit of the range: " lower
read -p "Enter the upper limit of the range: " upper

Check $num
Check $lower
Check $upper

if ((num >= lower)) && ((num <= upper)); then
    echo "The number is in the specified range."
else
    echo "The number is outside the specified range."
fi


Enter a number: 6
Enter the lower limit of the range: 4
Enter the upper limit of the range: 8
6 is an integer.
4 is an integer.
8 is an integer.
The number is in the specified range.


Enter a number: 12
Enter the lower limit of the range: 17
Enter the upper limit of the range: 23
12 is an integer.
17 is an integer.
23 is an integer.
The number is outside the specified range.

8. Գրել սկրիպտ, որը որպես ներմուծվող արժեք կստանա մեկ բառ, եւ կստուգի արդյոք այն համընկնում է "Secret" բառի հետ։ read հրամանը կատարել այնպես, որ ներմուծված արժեք պահպանվի REPLY փոփոխականի մեջ, իսկ ներմուծումն իրականացնելիս տառերը չցուցադրվեն էկրանին։

#! /bin/bash
read -sp 'Enter word : '
if [[ $REPLY == "Secret" ]];
then
    echo -e "\nYou entered the secret word."
else
    echo -e "\nIncorrect word."
fi

Enter word : 
You entered the secret word.

Enter word : 
Incorrect word.

9. Գրել սկրիպտ, որը որպես ներմուծվող արժեք կստանա ֆայլի անուն։ Վավերացնել անունը հետեւյալ կանոններով. կարող է պարունակել տառեր, թվեր, - . _ սիմվոլները։ Եթե նման ֆայլ գոյություն չունի, ապա ստեղծել։ Ցուցադրել համապատասխան հաղորդագրություն ֆայլի ստեղծման կամ առկայության մասին։

#! /bin/bash
read -p "Enter a file name: " file_name

pattern='^[a-zA-Z0-9_.-]+$'

if [[ ! $file_name =~ $pattern ]]; then
    echo "Invalid file name."
else
    if [ -f "$file_name" ]; then
        echo "The file '$file_name' already exists."
    else
        touch "$file_name"
        echo "The file '$file_name' has been created."
    fi
fi


Enter a file name: new.txt
The file 'new.txt' already exists.

Enter a file name: d.txt
The file 'd.txt' has been created.

10. Գրել <<Հաշվիչ>> ծրագիր, որը կստանա ճիշտ 3 արժեք հետեւյալ հաջորդականությամբ. թիվ, գործողություն, թիվ։ Օր՝ 2 + 3։ Ստուգել ներմուծված արժեքների քանակը, եւ 3-ից տարբեր լինելու դեպքում արտածել հաղորդագրություն սխալի մասին։ Իրականացնել արժեքների վավերացում։ Գործողության համար սահմանել հետեւյալ ընդունելի արժեքները. + - * / **։ Արտածել գործողության արդյունքը։

#! /bin/bash
Input () {
    if [[ $1 =~ ^-?[[:digit:]]+$ ]];
    then
        echo "$1 is an integer."
    else
        echo "$1 is not an integer."
        exit 1 
    fi

    if [[ $2 =~ ^[-+\*/**]$ ]];
    then
        echo "$2 is a right operator."
    else
        echo "$2 is not a right operator."
        exit 1
    fi

    if [[ $3 =~ ^-?[[:digit:]]+$ ]];
    then
        echo "$3 is an integer."
    else
        echo "$3 is not an integer."
        exit 1
    fi

    if [[ $4 ]];
    then
        echo "Too many variables."
        exit 1
    fi
}

answer(){
    result=$(($1 $2 $3))
    echo "Result: $result"
}

read -p "Enter: " 

echo $REPLY
Input $REPLY

answer $REPLY


Enter: 3 - 2
3 - 2
3 is an integer.
- is a right operator.
2 is an integer.
Result: 1


Enter: 34 3 23
34 3 23
34 is an integer.
3 is not a right operator.